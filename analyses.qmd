---
title: "Boundary conditions of using scientific evidence in teaching practice"
subtitle: "Investigating an inquiry habit of mind and its predictors"
author:
  - name: "JÃ¼rgen Schneider"
    email: "ju.schneider@dipf.de"
    affiliation: "DIPF"
    correspondence: true
date: "`r Sys.Date()`" # inserts the date of compiling
editor: source
execute:
  echo: true
  warning: false
  message: false
  cache: false # true will prevent embed-resources
format: 
  html:
    theme: ceruleanc
    number-sections: true
    fontsize: 0.85em
    toc: true
    toc-location: left
    toc-depth: 3
    embed-resources: true # will make standalone html file
    code-fold: true
    code-tools: true
    code-link: true
editor_options: 
  chunk_output_type: console
---

```{r packages}
#| echo: false
#| eval: true

library(rio)
library(tidyverse)
library(lavaan)
library(brms)
library(semoutput)
library(synthpop)
library(xfun)
```


```{r import}
# Import data
df <- rio::import("data/n9412_Rotation3_Datensatz_JGO.sav")
```

```{r}
# create synthetic dataset that can be shared
df_syn <- df %>%
  dplyr::select(f3_1, f3_2, f3_3, f3_4, f3_5, f3_6, f3_7, f3_8, 
                f5_1, f5_2, f5_3, f5_5, 
                f5_6, f5_8, f5_9, f5_10, 
                f5_11, f5_12, f5_13, f5_14, 
                f5_16, f5_17, f5_18, f5_19, 
                f1_1, f1_2, f1_5, f1_7, f1_10, f1_11, f1_13, 
                f1_3, f1_6, f1_12, 
                f1_4, f1_8, f1_9) %>%
  synthpop::syn(print.flag = FALSE)

saveRDS(df_syn$syn, file = "data/n9412_Rotation3_Datensatz_JGO_synthetic.rds")
```


**Open Data**  
We can't share the original data as they are part of a larger project that is still ongoing.  
However, we can share synthetic data created from our original data set using `synthpop`.  
Click here to download a `r xfun::embed_file(path = "data/n9412_Rotation3_Datensatz_JGO_synthetic.rds", text = "synthetic version of the data")`.

\
\

# Hypotheses
As preregistered on [aspredicted.org/JX3_XDW](https://aspredicted.org/JX3_XDW), our Hypotheses were:

1a: No relation of teachers' practical experience in school with their inquiry habit of mind.  
1b: No relation of teachers' transfer beliefs of theory and practice with their inquiry habit of mind.  
  
2a: The higher teachers' application of knowledge and skills, the higher teachers' inquiry habit of mind.  
2b: The higher teachers' selection beliefs of theory and practice, the higher teachers' inquiry habit of mind.  
2c: The higher teachers' enrichment beliefs of theory and practice, the higher teachers' inquiry habit of mind.  
  
*Exploratory:*  
3a: The higher the teachers' metareflective stance, the higher teachers' inquiry habit of mind.  
3b: The higher teachers' relationing beliefs of theory and practice, the higher teachers' inquiry habit of mind.



# Measurement Models

:::{.panel-tabset}

## INFO

* Click on the tabs to see the CFAs of each construct we use in the analyses below.
* The weights of these measurement model are saved and used to compute the factor scores, similar to `lavaan::lavPredict()`

## Inquiry Habit of Mind

```{r}
model_ihom <- '
              InquiryHabit =~ f3_1 + f3_2 + f3_3 + f3_4 + f3_5 + f3_6 + f3_7 + f3_8
              '

fit_ihom <- lavaan::cfa(model_ihom, data = df, std.lv = TRUE)
# summary(fit_ihom, fit.measures = TRUE, standardized = TRUE)
sem_tables(fit_ihom, rmsea_ci_level = 0.95)
lavaan::fitted(fit_ihom) # model-implied (fitted) covariance matrix (and mean vector)
lambdas_ihom <- parameterEstimates(fit_ihom)[1:8, "est"]   # Extract weights from model
```

## Beliefs: Transfer

```{r}
model_b_trans <- '
                 transfer =~ f5_1 + f5_2 + f5_3 + f5_5
                 '

fit_b_trans <- lavaan::cfa(model_b_trans, data = df, std.lv = TRUE)
# summary(fit_b_trans, fit.measures = TRUE, standardized = TRUE)
sem_tables(fit_b_trans, rmsea_ci_level = 0.95)
lavaan::fitted(fit_b_trans) # model-implied (fitted) covariance matrix (and mean vector)
lambdas_b_trans <- parameterEstimates(fit_b_trans)[1:4, "est"]   # Extract weights from model
```


## Beliefs: Selection

```{r}
model_b_selec <- '
                 selection =~ f5_6 + f5_8 + f5_9 + f5_10
                 '

fit_b_selec <- lavaan::cfa(model_b_selec, data = df, std.lv = TRUE)
# summary(fit_b_selec, fit.measures = TRUE, standardized = TRUE)
sem_tables(fit_b_selec, rmsea_ci_level = 0.95)
lavaan::fitted(fit_b_selec) # model-implied (fitted) covariance matrix (and mean vector)
lambdas_b_selec <- parameterEstimates(fit_b_selec)[1:4, "est"]   # Extract weights from model
```

## Beliefs: Enrichment

```{r}
model_b_enric <- '
                 enrichment =~ f5_11 + f5_12 + f5_13 + f5_14
                 '

fit_b_enric <- lavaan::cfa(model_b_enric, data = df, std.lv = TRUE)
# summary(fit_b_enric, fit.measures = TRUE, standardized = TRUE)
sem_tables(fit_b_enric, rmsea_ci_level = 0.95)
lavaan::fitted(fit_b_enric) # model-implied (fitted) covariance matrix (and mean vector)
lambdas_b_enric <- parameterEstimates(fit_b_enric)[1:4, "est"]   # Extract weights from model
```

## Beliefs: Relationing

```{r}
model_b_relat <- '
                 relationing =~ f5_16 + f5_17 + f5_18 + f5_19
                 '

fit_b_relat <- lavaan::cfa(model_b_relat, data = df, std.lv = TRUE)
# summary(fit_b_relat, fit.measures = TRUE, standardized = TRUE)
sem_tables(fit_b_relat, rmsea_ci_level = 0.95)
lavaan::fitted(fit_b_relat) # model-implied (fitted) covariance matrix (and mean vector)
lambdas_b_relat <- parameterEstimates(fit_b_relat)[1:4, "est"]   # Extract weights from model
```

## Teaching profession as teachers' practical experience

```{r}
model_prof_expierience <- '
                 experience =~ f1_1 +
                               f1_2 +
                               f1_5 +
                               f1_7 +
                               f1_10 +
                               f1_11 +
                               f1_13
                 '

fit_prof_expierience <- lavaan::cfa(model_prof_expierience, data = df, std.lv = TRUE)
# summary(fit_prof_expierience, fit.measures = TRUE, standardized = TRUE)
sem_tables(fit_prof_expierience, rmsea_ci_level = 0.95)
lavaan::fitted(fit_prof_expierience) # model-implied (fitted) covariance matrix (and mean vector)
lambdas_prof_expierience <- parameterEstimates(fit_prof_expierience)[1:7, "est"]   # Extract weights from model
```



## Teaching profession as application of knowledge and skills

```{r}
model_prof_application <- '
                 application =~ 1*f1_3 + f1_6 + f1_12
                 '

fit_prof_application <- lavaan::cfa(model_prof_application, data = df, std.lv = TRUE)
# summary(fit_prof_application, fit.measures = TRUE, standardized = TRUE)
sem_tables(fit_prof_application, rmsea_ci_level = 0.95)
lavaan::fitted(fit_prof_application) # model-implied (fitted) covariance matrix (and mean vector)
lambdas_prof_application <- parameterEstimates(fit_prof_application)[1:3, "est"]   # Extract weights from model
```



## Teaching profession as metareflective stance

```{r}
model_prof_metareflect <- '
                 relationing =~ 1*f1_4 + f1_8 + f1_9 
                 '

fit_prof_metareflect <- lavaan::cfa(model_prof_metareflect, data = df, std.lv = TRUE)
# summary(fit_prof_metareflect, fit.measures = TRUE, standardized = TRUE)
sem_tables(fit_prof_metareflect, rmsea_ci_level = 0.95)
lavaan::fitted(fit_prof_metareflect) # model-implied (fitted) covariance matrix (and mean vector)
lambdas_prof_metareflect <- parameterEstimates(fit_prof_metareflect)[1:3, "est"]   # Extract weights from model
```




:::

# Factor scores

Weights from the CFAs are used to compute factor individual factor scores.

```{r}
df <- df |>
  dplyr::mutate(inqiry_habit = rowMeans(data.frame(lambdas_ihom[1]*f3_1, # Use weights from model 
                                                   lambdas_ihom[2]*f3_2, # to compute factor
                                                   lambdas_ihom[3]*f3_3, # score according to
                                                   lambdas_ihom[4]*f3_4, # measurement model
                                                   lambdas_ihom[5]*f3_5, 
                                                   lambdas_ihom[6]*f3_6, 
                                                   lambdas_ihom[7]*f3_7, 
                                                   lambdas_ihom[8]*f3_8), 
                                        na.rm = TRUE),
                beliefs_transfer = rowMeans(data.frame(lambdas_b_trans[1]*f5_1,  
                                                       lambdas_b_trans[2]*f5_2,  
                                                       lambdas_b_trans[3]*f5_3,  
                                                       lambdas_b_trans[4]*f5_5),  
                                            na.rm = TRUE), 
                beliefs_selectio = rowMeans(data.frame(lambdas_b_selec[1]*f5_6,  
                                                       lambdas_b_selec[2]*f5_8,  
                                                       lambdas_b_selec[3]*f5_9,  
                                                       lambdas_b_selec[4]*f5_10), 
                                            na.rm = TRUE), 
                beliefs_enrichme = rowMeans(data.frame(lambdas_b_enric[1]*f5_11, 
                                                       lambdas_b_enric[2]*f5_12, 
                                                       lambdas_b_enric[3]*f5_13, 
                                                       lambdas_b_enric[4]*f5_14), 
                                            na.rm = TRUE), 
                beliefs_relation = rowMeans(data.frame(lambdas_b_relat[1]*f5_16, 
                                                       lambdas_b_relat[2]*f5_17, 
                                                       lambdas_b_relat[3]*f5_18, 
                                                       lambdas_b_relat[4]*f5_19), 
                                            na.rm = TRUE),
                prof_experience = rowMeans(data.frame(lambdas_prof_expierience[1]*f1_1,
                                                      lambdas_prof_expierience[2]*f1_2,
                                                      lambdas_prof_expierience[3]*f1_5,
                                                      lambdas_prof_expierience[4]*f1_7,
                                                      lambdas_prof_expierience[5]*f1_10,
                                                      lambdas_prof_expierience[6]*f1_11,
                                                      lambdas_prof_expierience[7]*f1_13), 
                                            na.rm = TRUE),
                prof_application = rowMeans(data.frame(lambdas_prof_application[1]*f1_3,
                                                       lambdas_prof_application[2]*f1_6,
                                                       lambdas_prof_application[3]*f1_12), 
                                            na.rm = TRUE),
                prof_metareflect = rowMeans(data.frame(lambdas_prof_metareflect[1]*f1_4,
                                                       lambdas_prof_metareflect[2]*f1_8,
                                                       lambdas_prof_metareflect[3]*f1_9), 
                                            na.rm = TRUE),
                practical_experience = jahre
                )
```




# Analyses

::: {.panel-tabset}

## H1a

> 1a: No relation of teachers' **practical experience** in school with their inquiry habit of mind.  


```{r}
set.seed(1100101)
fit_h1a <- brm(
  formula = inqiry_habit ~ prof_experience,
  data = df,
  prior = prior(student_t(10, 0, .5), # fairly informative prior for slope
                coef = prof_experience), 
  # sample_prior = 'yes', # (necessary for calculating BFs with Savage-Dickey)
  iter = 20000,
  silent = 2, # spare me the messages of compiler and sampler
  refresh = 0 # spare me the messages of compiler and sampler
  )

summary(fit_h1a)

hypothesis(fit_h1a, "abs(prof_experience) < .1")
# hypothesis(fit_h1a, "prof_experience = 0")
```


## H1b

> 1b: No relation of teachers' **transfer beliefs** of theory and practice with their inquiry habit of mind.  

```{r}
set.seed(1100101)
fit_h1b <- brm(
  formula = inqiry_habit ~ beliefs_transfer,
  data = df,
  prior = prior(student_t(10, 0, .5), # fairly informative prior for slope
                coef = beliefs_transfer), 
  sample_prior = 'yes', # (necessary for calculating BFs with Savage-Dickey)
  iter = 20000,
  silent = 2, # spare me the messages of compiler and sampler
  refresh = 0 # spare me the messages of compiler and sampler
  )

summary(fit_h1b)

hypothesis(fit_h1b, "abs(beliefs_transfer) < .1")
# hypothesis(fit_h1b, "experience = 0")
```

## H2a

> 2a: The higher teachers' **application of knowledge and skills**, the higher teachers' inquiry habit of mind.  

```{r}
set.seed(1100101)
fit_h2a <- brm(
  formula = inqiry_habit ~ prof_application,
  data = df,
  prior = prior(student_t(10, 0, .5), # fairly informative prior for slope
                coef = prof_application),
  sample_prior = 'yes', # (necessary for calculating BFs with Savage-Dickey)
  iter = 20000,
  silent = 2, # spare me the messages of compiler and sampler
  refresh = 0 # spare me the messages of compiler and sampler
  )

summary(fit_h2a)

hypothesis(fit_h2a, "prof_application > 0")
```


## H2b

> 2b: The higher teachers' **selection beliefs** of theory and practice, the higher teachers' inquiry habit of mind.  

```{r}
set.seed(1100101)
fit_h2b <- brm(
  formula = inqiry_habit ~ beliefs_selectio,
  data = df,
  prior = prior(student_t(10, 0, .5), # fairly informative prior for slope
                coef = beliefs_selectio), 
  sample_prior = 'yes', # (necessary for calculating BFs with Savage-Dickey)
  iter = 20000,
  silent = 2, # spare me the messages of compiler and sampler
  refresh = 0 # spare me the messages of compiler and sampler
  )

summary(fit_h2b)

hypothesis(fit_h2b, "beliefs_selectio > 0")
```


## H2c

> 2c: The higher teachers' **enrichment beliefs** of theory and practice, the higher teachers' inquiry habit of mind.   

```{r}
set.seed(1100101)
fit_h2c <- brm(
  formula = inqiry_habit ~ beliefs_enrichme,
  data = df,
  prior = prior(student_t(10, 0, .5), # fairly informative prior for slope
                coef = beliefs_enrichme), 
  sample_prior = 'yes', # (necessary for calculating BFs with Savage-Dickey)
  iter = 20000,
  silent = 2, # spare me the messages of compiler and sampler
  refresh = 0 # spare me the messages of compiler and sampler
  )

summary(fit_h2c)

hypothesis(fit_h2c, "beliefs_enrichme > 0")
```



## H3a

*Exploratory:*   
> 3a: The higher the teachers' **metareflective stance**, the higher teachers' inquiry habit of mind.   

```{r}
set.seed(1100101)
fit_h3a <- brm(
  formula = inqiry_habit ~ prof_metareflect,
  data = df,
  prior = prior(student_t(10, 0, .5), # fairly informative prior for slope
                coef = prof_metareflect),
  sample_prior = 'yes', # (necessary for calculating BFs with Savage-Dickey)
  iter = 20000,
  silent = 2, # spare me the messages of compiler and sampler
  refresh = 0 # spare me the messages of compiler and sampler
  )

summary(fit_h3a)

hypothesis(fit_h3a, "prof_metareflect > 0")
```


## H3b

*Exploratory:*   
> 3b: The higher teachers' **relationing beliefs** of theory and practice, the higher teachers' inquiry habit of mind.

```{r}
set.seed(1100101)
fit_h3b <- brm(
  formula = inqiry_habit ~ beliefs_relation,
  data = df,
  prior = prior(student_t(10, 0, .5), # fairly informative prior for slope
                coef = beliefs_relation),
  sample_prior = 'yes', # (necessary for calculating BFs with Savage-Dickey)
  iter = 20000,
  silent = 2, # spare me the messages of compiler and sampler
  refresh = 0 # spare me the messages of compiler and sampler
  )

summary(fit_h3b)

hypothesis(fit_h3b, "beliefs_relation > 0")
```

:::


# Computational environment

## Packages

```{r}
installed.packages()[names(sessionInfo()$otherPkgs), "Version"]
```

## R Version

```{r}
R.Version()
```